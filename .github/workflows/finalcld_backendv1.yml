name: Build and deploy Node.js app to Azure Web App - backendv1

on:
  push:
    branches:
      - finalcld
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-

      - name: npm install, build, and test (Server Only)
        run: |
          npm install
          npm run build --if-present
          npm run test --if-present
        working-directory: ./server  # Set the working directory to server

      - name: Compress server folder for deployment (Linux)
        run: |
          tar -czvf server.tar.gz -C server .
      
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: server-app
          path: server.tar.gz  # Upload the compressed tar file

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write # Required for requesting the JWT

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: server-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.__clientidsecretname__ }}
          tenant-id: ${{ secrets.__tenantidsecretname__ }}
          subscription-id: ${{ secrets.__subscriptionidsecretname__ }}
          
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'backendv1'
          slot-name: 'Production'
          package: server.tar.gz  # Deploy the tar.gz package
